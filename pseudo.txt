The first function getComputerChoice will return either rock, paper or
scissors when called.
In order to accomplish this, we need something random....
and return one of the choices in condition with random, or somehting like that


1. Declare and Initialize getComputerChoice function without any parameter input.
2.Initialize a 4th variable that stores a random number from 0-100.
3. if the 4th variable gets a number less than 33, return strin rock, if it is less than 66, return paper otherwise return scissors


The second function would be the function that plays the game when invoked, a single round. It accepts 2 parameters as arguments, the player
selection and computerchoice. It should return a string declaring the winner like, "You win! Paper beats rock.". Accounts ties by replaying
the round, and player selection should be case insensitive.

1. Declare and initialize the playRound() function, and inside the parenthesis, playerSelection and computerSelection.
2. playerSelection gets first converted to all small letters no matter how it was entered.
3. the computerSelection will store the value of getComputerChoice function.
4. Using the switch case, we will make conditions in case, for every case. Of if this does not turn out well, if else conditions.


The final function is game time. I am guessing this function should be the main show of the program. Because it will probably include the
other 2 functions of the program as well.
Firstly first we prompt the user for their input of either resonance bow? paper or scissors.
We store their input into a local variable inside the game function which is called playerSelection.
After this we shall declare 2 more variables to store and increment points for the player and the bot, depending on the values of these
variables the final output will be affected. Initialize these 2 variables with 0s, before invoking playGame function.
At this moment I really should modify playGame fucntion by adding incrementing features. Now that I wrote this, I really should move these 
2 variables to global scope instead? lol. Actually no, as I should be initializing these 2 variables in the local scope of playRound instead.
NO...THEY MUST BE GLOBAL SCOPE ACTUALLY!S


BEGIN
    INIT function getComputerChoice with no parameters

        SET randomChoice to generate random number between 1-100
        IF randomChoice returns 33 or less THEN
            return rock 
        ELSE IF randomChoice returns less than 66
            return paper
        ELSE return scissors

        END IF
    
    END function

    INIT function playRound with playerSelection and computerSelection(inherited from getComputerChoice function) parameters
        DETERMINE playerSelection to have it case insensitive

        CASE TRUE OF
            computerChoice equals to playerSelection: 
                DISPLAY "It is a tie!"
                CALL playRound() function again

            computerChoice equals paper AND playerSelection equals rock:

            I shall skip the writing of the pseudo code as I have already got this part working on the actual code mAHAHHAHA

        END CASE
    
    END FUNCTION


    INT game() function 
        FOR 5 iterations 
            SET userSelection variable and 
            GET either rock, paper or scissors from user

            CALL playRound() with the argument userSelection
        END FOR

        IF playerPoints are greater than botPoints THEN
            DISPLAY "Victory! You get hero sword!"
        ELSE IF playerPoints are equal to botPoints THEN
            DISPLAY "It is a tie, my friends!"        
        ELSE DISPLAY 
            "You have lost!"
        END IF

    END game() function
END

/////////////////////////////////////////////////////////////////////////////////////////////////////////
1/20/2024 - Pseudo polish - thank you to webster
Goals are 
to make it so that every time computer and player are tied, give both a reroll.
Hard code/defense code for the prompts
Give an option to retry

switch(computerSelection) {
            case 'R':
                cFinal = 'Resonance Blood scourge railgun';
                break;
            case 'P':
                cFinal = 'Precision Pulse rifle';
            case 'S':
                cFinal = 'Soulshatter Scorch Blade';
        }
        switch(playerSelection) {
            case 'R':
                pFinal = 'Resonance Blood scourge railgun';
                break;
            case 'P':
                pFinal = 'Precision Pulse rifle';
            case 'S':
                pFinal = 'Soulshatter Scorch Blade';
        }

From now on I write pseudo in physical book actually
